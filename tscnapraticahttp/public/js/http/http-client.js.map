{"version":3,"file":"http-client.js","sourceRoot":"","sources":["../../../src/http/http-client.ts"],"names":[],"mappings":";;;IAEA,IAAK,SAIJ;IAJD,WAAK,SAAS;QAEV,wBAAW,CAAA;QACX,0BAAa,CAAA;IACjB,CAAC,EAJI,SAAS,KAAT,SAAS,QAIb;IAED,MAAqB,UAAU;QAE3B,GAAG,CAAC,GAAU;YAER,OAAO,IAAI,OAAO,CAAE,CAAC,OAAO,EAAC,MAAM,EAAE,EAAE;gBACrC,IAAI,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;gBAC/D,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAC,OAAO,EAAC,MAAM,CAAC,CAAC;gBACpD,WAAW,CAAC,IAAI,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;QACP,CAAC;QAED,IAAI,CAAC,GAAU,EAAC,IAAQ;YAElB,OAAO,IAAI,OAAO,CAAE,CAAC,OAAO,EAAC,MAAM,EAAE,EAAE;gBACrC,IAAI,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;gBAChE,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAC,OAAO,EAAC,MAAM,CAAC,CAAC;gBACpD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,oBAAoB,CAAC,IAAc,EAAE,GAAU;YAEnD,IAAI,WAAW,GAAG,IAAI,cAAc,EAAE,CAAC;YACvC,MAAM,KAAK,GAAW,IAAI,CAAC;YAC3B,WAAW,CAAC,IAAI,CAAC,IAAI,EAAC,GAAG,EAAC,KAAK,CAAC,CAAC;YACjC,OAAO,WAAW,CAAC;QACvB,CAAC;QAEO,kBAAkB,CAAC,WAA0B,EAAC,OAAO,EAAC,MAAM;YAEhE,WAAW,CAAC,kBAAkB,GAAG;gBAE7B,IAAG,IAAI,CAAC,UAAU,IAAI,CAAC,EACvB;oBACI,IAAG,IAAI,CAAC,MAAM,IAAE,GAAG,IAAG,IAAI,CAAC,MAAM,IAAE,GAAG,EACtC;wBACI,MAAM,QAAQ,GAAG,IAAI,uBAAY,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACjE,OAAO,CAAC,QAAQ,CAAC,CAAC;qBACrB;iBACJ;YACL,CAAC,CAAA;QACL,CAAC;KACJ;IA1CD,6BA0CC","sourcesContent":["import HttpResposta from 'http/http-resposta';\r\n\r\nenum httpVerbs\r\n{\r\n    GET = 'GET',\r\n    POST = 'POST'\r\n}\r\n\r\nexport default class HttpClient{\r\n\r\n    get(url:string) : Promise<HttpResposta>\r\n    {\r\n          return new Promise( (resolve,reject) =>{\r\n            let conexaoHttp = this.createXmlHttpRequest(httpVerbs.GET,url);\r\n            this.configureCallbacks(conexaoHttp,resolve,reject);\r\n            conexaoHttp.send();\r\n        });\r\n    } \r\n\r\n    post(url:string,data:any) : Promise<HttpResposta>\r\n    {\r\n          return new Promise( (resolve,reject) =>{\r\n            let conexaoHttp = this.createXmlHttpRequest(httpVerbs.POST,url);\r\n            this.configureCallbacks(conexaoHttp,resolve,reject);\r\n            conexaoHttp.send(data);\r\n        });\r\n    } \r\n\r\n    private createXmlHttpRequest(verb:httpVerbs, url:string) : XMLHttpRequest\r\n    {\r\n        let conexaoHttp = new XMLHttpRequest();\r\n        const async:boolean = true;\r\n        conexaoHttp.open(verb,url,async);\r\n        return conexaoHttp;\r\n    }\r\n\r\n    private configureCallbacks(conexaoHttp:XMLHttpRequest,resolve,reject)\r\n    {\r\n        conexaoHttp.onreadystatechange = function()\r\n        {\r\n            if(this.readyState == 4)\r\n            {\r\n                if(this.status==200 ||this.status==201)\r\n                {\r\n                    const resposta = new HttpResposta(this.responseText,this.status);\r\n                    resolve(resposta);\r\n                }\r\n            }\r\n        }\r\n    }   \r\n}"]}