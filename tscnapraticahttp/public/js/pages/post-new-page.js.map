{"version":3,"file":"post-new-page.js","sourceRoot":"","sources":["../../../src/pages/post-new-page.ts"],"names":[],"mappings":";;;IAOA,MAAM,WAAW;QAEb,YAAoB,WAAuB;YAAvB,gBAAW,GAAX,WAAW,CAAY;YACvC,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QAEO,eAAe;YAEnB,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAAC,QAAQ,EAAC,CAAC,KAAW,EAAC,EAAE;gBACxE,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC;QACP,CAAC;QAED,MAAM;YACF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACf,OAAO;YAEX,IAAI,IAAI,GAAG,EAAE,KAAK,EAAC,cAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAC,cAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAC/B,CAAC,QAAe,EAAC,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;QACP,CAAC;QAED,OAAO;YAEH,IAAI,SAAS,GAAG,IAAI,2BAAgB,CAAC;gBACnC,EAAC,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,CAAC,mBAAS,CAAC,QAAQ,EAAC,mBAAS,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAC,iBAAiB,EAAC;gBAC3F,EAAC,QAAQ,EAAC,OAAO,EAAC,KAAK,EAAC,CAAC,mBAAS,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAC,mBAAmB,EAAC;aAAC,CAC3E,CAAC;YACF,OAAO,SAAS,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;QAED,IAAI;YACA,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;KAEJ;IAED,MAAM,WAAW,GAAG,IAAI,sBAAW,EAAE,CAAC;IACtC,IAAI,WAAW,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import Page from './page';\r\nimport HttpWrapper from '../http/http-wrapper';\r\nimport Form from '../components/form';\r\nimport ValidatorManager from '../components/validators/validator-manager';\r\nimport Validator from '../components/validators/validator';\r\n\r\n\r\nclass PostNewPage implements Page{\r\n\r\n    constructor(private httpWrapper:HttpWrapper){\r\n        this.init();\r\n    }\r\n\r\n    private associarEventos()\r\n    {\r\n        document.querySelector('#my-form').addEventListener('submit',(event:Event)=>{\r\n            event.preventDefault();\r\n            this.submit();\r\n            return false;\r\n        });\r\n    }\r\n\r\n    submit(){\r\n        if (!this.isValid())\r\n            return;\r\n\r\n        let data = { title:Form.getValueFromField(\"#title\"), body:Form.getValueFromField(\"#body\") };\r\n        this.httpWrapper.post(data).then\r\n        ((response:object)=>{\r\n            console.log(response);\r\n            alert('submetido' + data.title +  '-' + data.body);\r\n        });\r\n    }\r\n\r\n    isValid():boolean\r\n    {\r\n        let validator = new ValidatorManager([\r\n          {selector:'#title',rules:[Validator.required,Validator.mincarac],message:'titulo invalido'},\r\n          {selector:'#body',rules:[Validator.required],message:'conteudo invalido'}]\r\n        );\r\n        return validator.isValid();\r\n    }\r\n    \r\n    init(): void {\r\n        this.associarEventos();\r\n    }\r\n\r\n}\r\n\r\nconst httpWrapper = new HttpWrapper();\r\nnew PostNewPage(httpWrapper);"]}